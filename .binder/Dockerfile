# THIS FILE IS AUTOGENERATED FROM .binder/Dockerfile.in


# the docker container for binder needs pymor installed entirely inside
# the container, local dev needs it in path from mounted src
# we trick docker into fulfilling both roles via a conditional ONBUILD
# if you want to use the local dev setup, see docker/docker-compose.yml
ARG BASE=pymor/testing_py3.9:4ee2b386dc8fee933fd090d334b329103f9bc918
ARG BUILD_ENV=binder

FROM $BASE as image_binder
ONBUILD ADD . /src

FROM $BASE as image_dev
ONBUILD RUN echo "dev image uses mounted pymor" && mkdir /src
ONBUILD ENV PYTHONPATH=/pymor/src:${PYTHONPATH}
ONBUILD ADD . /src

# select "base" image according to build arg
FROM image_${BUILD_ENV}
MAINTAINER rene.fritze@wwu.de

# binder wants to set the NB_ vars anyways, so we use it to service both setups
ARG NB_USER
ARG NB_UID
ARG PYMOR_JUPYTER_TOKEN

USER root
RUN useradd -d /home/pymor --shell /bin/bash -u ${NB_UID} -o -c "" -m ${NB_USER} && \
    chown -R ${NB_USER} /home/pymor /src/ && \
    apt update && \
    apt install -y libtbb-dev

RUN bash -c "([[ -e /src/setup.py ]] && pip install /src || echo 'no install needed') && pip install jupyter"
USER ${NB_USER}

ENV JUPYTER_TOKEN=${PYMOR_JUPYTER_TOKEN} \
    USER=${NB_USER} \
    HOME=/home/pymor \
    XDG_CACHE_DIR=/tmp/cache \
    CCACHE_DIR=/tmp/cache/ccache

ENTRYPOINT []
WORKDIR /src/notebooks
